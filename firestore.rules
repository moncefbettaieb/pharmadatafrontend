rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Fonction pour vérifier si l'utilisateur est authentifié
    function isAuthenticated() {
      return request.auth != null;
    }

    // Fonction pour vérifier si l'utilisateur accède à ses propres données
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Fonction pour vérifier si la requête vient d'une Cloud Function
    function isCloudFunction() {
      return request.auth.token.firebase.sign_in_provider == 'google.com' ||
             'admin' in request.auth.token;
    }

    // Règles pour la collection users
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      allow read, write: if request.auth.token.firebase.sign_in_provider == 'google.com';
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Règles pour la collection orders
    match /orders/{orderId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || isCloudFunction()
      );
      allow write: if isCloudFunction();
    }

    // Règles pour les autres collections
    match /{document=**} {
      allow read: if isCloudFunction();
      allow write: if isCloudFunction();
    }
  }
}