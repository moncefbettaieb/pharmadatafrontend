name: CI/CD

on:
  push:
    branches: [ "main" ] # Sur push main => déploiement Staging
    tags: [ "v*" ] # Sur tag v* => déploiement Prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Authenticate with GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up GCloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Authenticate Docker with GCP Artifact Registry
      run: |
        gcloud auth configure-docker europe-west9-docker.pkg.dev

    - name: Build docker image
      run: |
        docker build -t europe-west9-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-run-source-deploy/pharmadatafrontend/pharmadatafrontend:$GITHUB_SHA \
        --build-arg API_BASE_URL=${{ secrets.API_BASE_URL }} \
        --build-arg FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY}} \
        --build-arg FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN}} \
        --build-arg FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID}} \
        --build-arg FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET}} \
        --build-arg FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID}} \
        --build-arg FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID}} \
        --build-arg STRIPE_PUBLIC_KEY=${{ secrets.STRIPE_PUBLIC_KEY}} \
        --build-arg FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID}} .
    
    - name: Push docker image
      run: |
        docker push europe-west9-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-run-source-deploy/pharmadatafrontend/pharmadatafrontend:$GITHUB_SHA

    - name: Deploy to Staging
      if: github.ref == 'refs/heads/main'
      env:
        API_BASE_URL: STAGING_API_URL
      run: |
        gcloud run deploy pharmadata-frontend-staging \
          --image europe-west9-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-run-source-deploy/pharmadatafrontend/pharmadatafrontend:$GITHUB_SHA \
          --platform managed \
          --region europe-west9 \
          --set-env-vars ENVIRONMENT=staging \
          --set-env-vars API_BASE_URL=${{ secrets.API_BASE_URL }} \
          --set-env-vars FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }} \
          --set-env-vars FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }} \
          --set-env-vars FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }} \
          --set-env-vars FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }} \
          --set-env-vars FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }} \
          --set-env-vars FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }} \
          --set-env-vars FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }} \
          --set-env-vars STRIPE_PUBLIC_KEY=${{ secrets.STRIPE_PUBLIC_KEY }} \
          --allow-unauthenticated

    - name: Deploy to Prod
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        API_BASE_URL: PROD_API_URL
      run: |
        gcloud run deploy pharmadata-frontend-prod \
          --image europe-west9-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-run-source-deploy/pharmadatafrontend/pharmadatafrontend:$GITHUB_SHA \
          --platform managed \
          --region europe-west9 \
          --set-env-vars API_BASE_URL=${{ secrets.API_BASE_URL }} \
          --set-env-vars FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }} \
          --set-env-vars FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }} \
          --set-env-vars FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }} \
          --set-env-vars FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }} \
          --set-env-vars FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }} \
          --set-env-vars FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }} \
          --set-env-vars FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }} \
          --set-env-vars STRIPE_PUBLIC_KEY=${{ secrets.STRIPE_PUBLIC_KEY }} \
          --allow-unauthenticated